{
  "choices": [
    {
      "id": "0627a1bb-60ed-473f-b943-120e46e85a98",
      "name": "new project ",
      "type": "Template",
      "command": true,
      "templatePath": "00-09 system/project/project template.md",
      "fileNameFormat": {
        "enabled": true,
        "format": "{{value: Project Name}}"
      },
      "folder": {
        "enabled": true,
        "folders": [
          "00-09 system/project"
        ],
        "chooseWhenCreatingNote": false,
        "createInSameFolderAsActiveFile": false,
        "chooseFromSubfolders": false
      },
      "appendLink": false,
      "openFileInNewTab": {
        "enabled": false,
        "direction": "vertical",
        "focus": true
      },
      "openFile": true,
      "openFileInMode": "default",
      "fileExistsMode": "Increment the file name",
      "setFileExistsBehavior": true
    },
    {
      "id": "9877ec7d-ce99-4306-8db4-9ba65be6a431",
      "name": "metadata ",
      "type": "Capture",
      "command": true,
      "appendLink": false,
      "captureTo": "",
      "captureToActiveFile": true,
      "createFileIfItDoesntExist": {
        "enabled": false,
        "createWithTemplate": false,
        "template": ""
      },
      "format": {
        "enabled": true,
        "format": "# {{VALUE:Project Name}}\n#project\n\n|--|--|\n|Start Date | `INPUT[datePicker():StartDate]`|\n|Due Date   | `INPUT[datePicker():DueDate]`|\n|Priority   | `INPUT[inlineSelect(option(🔽 Low),option(⏺️ Normal),option(🔼 High),option(⏫ Very High),option(🚩 Urgent),defaultValue(⏺️ Normal), showcase):Priority]`|\n|Status     | `INPUT[inlineSelect(option(🟢 Done),option(🟡 In Progress),option(🟠 Standby),option(🔴 Not Started),defaultValue(🔴 Not Started), showcase):Status]`  `$= const setPage = dv.current().file.name; const value = Math.round(((dv.page(setPage).file.tasks.where(t => t.completed).length) / (dv.page(setPage).file.tasks).length) * 100); \"\" + \"\" + value + \"%   \" + (dv.page(setPage).file.tasks.length - dv.page(setPage).file.tasks.where(t => t.completed).length) + \" left\"` | <progress value =\"\" max=\"100\" class=\"nyan-cat\" ></progress>\n|Archived   | `INPUT[toggle:Archived]`|\n\n\n\n```meta-bind-button\nstyle: primary\nid: addTask\nhidden: false\nlabel: ✅ New Task\nactions:\n  - type: command\n    command: quickadd:choice:7a26a750-d8b3-441f-97b2-de6c14049fc7\n```\n```meta-bind-button\nstyle: primary\nid: addActivity\nhidden: false\nlabel: 🏃‍♂️ New Activity\nactions:\n  - type: command\n    command: quickadd:choice:785625a3-b068-4b7b-9b32-876b271d7997\n```\n```meta-bind-button\nstyle: primary\nid: addFile\nhidden: false\nlabel: 📂 New File\nactions:\n  - type: command\n    command: quickadd:choice:2316970e-6918-411e-9ad0-385b55b01942\n```\n\n>[!summary]+ Files\n>```dataview\ntable this.file.ctime as \"Created On\", this.file.mtime as \"Modified On\"\nfrom \"02 Action/02 Projects/{{VALUE:Project Name}}\"\nwhere file.name != this.file.name\nsort file.mtime DESC\n>```\n\n>[!kanban]+\n> - Todo\n>  - ```tasks\n>   not done\n>   path includes {{query.file.path}}\n>   (status.type is not IN_PROGRESS)\n>   short mode\n>   hide due date\n>   hide start date\n>   hide scheduled date\n>   hide recurrence rule\n>   sort by urgency, scheduled```\n> - Doing\n>  - ```tasks\n>  not done\n>  path includes {{query.file.path}}\n>  (status.type is IN_PROGRESS)\n>  short mode\n>  hide due date\n>  hide start date\n>  hide scheduled date\n>  hide recurrence rule\n>  sort by urgency, due ```\n> - Done\n>  - ```tasks\n>  done\n>  path includes {{query.file.path}}\n>  short mode\n>  hide due date\n>  hide start date\n>  hide scheduled date\n>  hide recurrence rule\n>  hide priority\n>  sort by done reverse```\n>  \n\n>[!hidden]+ Tasks\n"
      },
      "insertAfter": {
        "enabled": false,
        "after": "",
        "insertAtEnd": false,
        "considerSubsections": false,
        "createIfNotFound": false,
        "createIfNotFoundLocation": "top"
      },
      "prepend": true,
      "task": false,
      "openFileInNewTab": {
        "enabled": false,
        "direction": "vertical",
        "focus": true
      },
      "openFile": false,
      "openFileInMode": "default"
    },
    {
      "id": "7a26a750-d8b3-441f-97b2-de6c14049fc7",
      "name": "add project task ",
      "type": "Macro",
      "command": true,
      "macroId": "8c049d3a-fdd6-44b7-8f04-4b8491bc0580"
    },
    {
      "id": "2316970e-6918-411e-9ad0-385b55b01942",
      "name": "add file to project ",
      "type": "Macro",
      "command": true,
      "macroId": "2cf52378-a5f2-439b-b356-389d8fae5f04"
    },
    {
      "id": "0914894b-949c-43cb-a82a-b1fe5e1aaed8",
      "name": "add task to project ",
      "type": "Capture",
      "command": true,
      "appendLink": false,
      "captureTo": "",
      "captureToActiveFile": true,
      "createFileIfItDoesntExist": {
        "enabled": false,
        "createWithTemplate": false,
        "template": ""
      },
      "format": {
        "enabled": true,
        "format": "```js quickadd\nconst modalForm = app.plugins.plugins.modalforms.api;\nconst result = await modalForm.openForm('project tasks');\nlet Description = result.asString('{{Description}}');\nlet Tags= result.asString('{{Tags}}');\nlet Priority= result.asString('{{Priority}}');\nlet Due= result.asString('{{Due}}');\nif(Due !== '' &&  Due !== null &&  Due !== '{{Due}}'){\nDue = '📅 ' + Due;\n} else {\nDue = ' ';\n}\n\nlet resultado = '';\n\nif(Description !== '' &&  Description !== null &&  Description !== '{{Description}}'){\n let resultado1= '>- [ ] ' + Description.trimEnd() + ' #' + Tags.trimEnd() + ' ' + Priority.trimEnd() + ' ' + Due.trimEnd(); \n var today = new Date();\n var dd = String(today.getDate()).padStart(2, '0');\n var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n var yyyy = today.getFullYear();\n today = yyyy + '-' + mm + '-' + dd;\n resultado = resultado1.trimEnd() + ' ➕ ' + today + '\\n';\n} \n\nreturn resultado;\n```"
      },
      "insertAfter": {
        "enabled": true,
        "after": ">[!hidden]+ Tasks",
        "insertAtEnd": true,
        "considerSubsections": false,
        "createIfNotFound": false,
        "createIfNotFoundLocation": "top"
      },
      "prepend": false,
      "task": true,
      "openFileInNewTab": {
        "enabled": false,
        "direction": "vertical",
        "focus": true
      },
      "openFile": false,
      "openFileInMode": "default"
    },
    {
      "id": "7d4d5e67-f63a-4953-b6e4-100437cf87e9",
      "name": "log entry",
      "type": "Capture",
      "command": true,
      "appendLink": false,
      "captureTo": "00-09 system/journal/daily/{{DATE:YYYY}}/{{DATE:MM}}/{{DATE:YYYY-MM-DD}}",
      "captureToActiveFile": false,
      "createFileIfItDoesntExist": {
        "enabled": true,
        "createWithTemplate": true,
        "template": "00-09 system/template/daily note template.md"
      },
      "format": {
        "enabled": true,
        "format": "- {{time}}: {{VALUE}}"
      },
      "insertAfter": {
        "enabled": true,
        "after": "## Log",
        "insertAtEnd": true,
        "considerSubsections": false,
        "createIfNotFound": false,
        "createIfNotFoundLocation": "top"
      },
      "prepend": false,
      "task": false,
      "openFileInNewTab": {
        "enabled": false,
        "direction": "vertical",
        "focus": true
      },
      "openFile": false,
      "openFileInMode": "default"
    },
    {
      "id": "e604e945-f973-44f8-bac0-81c41a33d1f7",
      "name": "Flowmo Start",
      "type": "Macro",
      "command": true,
      "macroId": "1f2e6af3-6d32-4757-a781-fb86eae049b1"
    },
    {
      "id": "6dcded1b-c533-48c0-bd22-44d9e0369de5",
      "name": "Flowmo End",
      "type": "Macro",
      "command": true,
      "macroId": "23fe3872-a2d0-44bd-bf9b-a618b74f8dc5"
    }
  ],
  "macros": [
    {
      "name": "project tasks",
      "id": "8c049d3a-fdd6-44b7-8f04-4b8491bc0580",
      "commands": [
        {
          "name": "Untitled Capture Choice",
          "type": "NestedChoice",
          "id": "77cc9742-6dc6-4602-8881-5821a5beaddd",
          "choice": {
            "id": "68da4682-447f-4cb0-b36c-aa41d2b48e76",
            "name": "Untitled Capture Choice",
            "type": "Capture",
            "command": false,
            "appendLink": false,
            "captureTo": "",
            "captureToActiveFile": true,
            "createFileIfItDoesntExist": {
              "enabled": false,
              "createWithTemplate": false,
              "template": ""
            },
            "format": {
              "enabled": true,
              "format": "```js quickadd\nconst modalForm = app.plugins.plugins.modalforms.api;\nconst result = await modalForm.openForm('project tasks');\nlet Description = result.asString('{{Description}}');\nlet Tags= result.asString('{{Tags}}');\nlet Priority= result.asString('{{Priority}}');\nlet Due= result.asString('{{Due}}');\nif(Due !== '' &&  Due !== null &&  Due !== '{{Due}}'){\nDue = '📅 ' + Due;\n} else {\nDue = ' ';\n}\n\nlet resultado = '';\n\nif(Description !== '' &&  Description !== null &&  Description !== '{{Description}}'){\n let resultado1= '>- [ ] ' + Description.trimEnd() + ' #' + Tags.trimEnd() + ' ' + Priority.trimEnd() + ' ' + Due.trimEnd(); \n var today = new Date();\n var dd = String(today.getDate()).padStart(2, '0');\n var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n var yyyy = today.getFullYear();\n today = yyyy + '-' + mm + '-' + dd;\n resultado = resultado1.trimEnd() + ' ➕ ' + today + '\\n';\n} \n\nreturn resultado;\n```"
            },
            "insertAfter": {
              "enabled": true,
              "after": ">[!hidden]+ Tasks",
              "insertAtEnd": true,
              "considerSubsections": false,
              "createIfNotFound": false,
              "createIfNotFoundLocation": "top"
            },
            "prepend": false,
            "task": false,
            "openFileInNewTab": {
              "enabled": false,
              "direction": "vertical",
              "focus": true
            },
            "openFile": false,
            "openFileInMode": "default"
          }
        }
      ],
      "runOnStartup": false
    },
    {
      "name": "add file to project ",
      "id": "2cf52378-a5f2-439b-b356-389d8fae5f04",
      "commands": [
        {
          "name": "add files to project",
          "type": "UserScript",
          "id": "4e50a020-58f8-4cb6-94da-215e7e97eb74",
          "path": "00-09 system/scripts/add files to project.js",
          "settings": {}
        }
      ],
      "runOnStartup": false
    },
    {
      "name": "Flowmo Start",
      "id": "1f2e6af3-6d32-4757-a781-fb86eae049b1",
      "commands": [
        {
          "name": "Untitled Capture Choice",
          "type": "NestedChoice",
          "id": "032d977e-6445-445a-85f7-b793f6250e70",
          "choice": {
            "id": "22ed55d6-78ed-43d1-b3f9-49871bbbffb3",
            "name": "Untitled Capture Choice",
            "type": "Capture",
            "command": false,
            "appendLink": false,
            "captureTo": "Logs/Flowmo Log.md",
            "captureToActiveFile": false,
            "createFileIfItDoesntExist": {
              "enabled": false,
              "createWithTemplate": false,
              "template": ""
            },
            "format": {
              "enabled": true,
              "format": "- **{{DATE:YYYY-MM-DD}}** | **Task:** {{VALUE:task}} | **Start:** {{TIME:HH:mm}} "
            },
            "insertAfter": {
              "enabled": false,
              "after": "",
              "insertAtEnd": false,
              "considerSubsections": false,
              "createIfNotFound": true,
              "createIfNotFoundLocation": "bottom"
            },
            "prepend": false,
            "task": false,
            "openFileInNewTab": {
              "enabled": false,
              "direction": "vertical",
              "focus": true
            },
            "openFile": false,
            "openFileInMode": "default"
          }
        }
      ],
      "runOnStartup": true
    },
    {
      "name": "Flowmo End",
      "id": "23fe3872-a2d0-44bd-bf9b-a618b74f8dc5",
      "commands": [
        {
          "name": "Timetracker: Reset the stopwatch",
          "type": "Obsidian",
          "id": "b8791c46-2c7b-440d-83c5-6ad72c6e4832",
          "commandId": "timetracker:reset-stopwatch"
        },
        {
          "name": "Untitled Capture Choice",
          "type": "NestedChoice",
          "id": "01b25287-b8d1-48cc-acc1-55d45eb1c030",
          "choice": {
            "id": "11f6028f-03d4-4a7b-8732-c86af7af2a2b",
            "name": "Untitled Capture Choice",
            "type": "Capture",
            "command": false,
            "appendLink": false,
            "captureTo": "Logs/Flowmo Log.md",
            "captureToActiveFile": false,
            "createFileIfItDoesntExist": {
              "enabled": false,
              "createWithTemplate": false,
              "template": ""
            },
            "format": {
              "enabled": true,
              "format": "- **Kết thúc:** {{TIME:HH:mm}}"
            },
            "insertAfter": {
              "enabled": false,
              "after": "",
              "insertAtEnd": false,
              "considerSubsections": false,
              "createIfNotFound": false,
              "createIfNotFoundLocation": "bottom"
            },
            "prepend": false,
            "task": false,
            "openFileInNewTab": {
              "enabled": false,
              "direction": "vertical",
              "focus": true
            },
            "openFile": false,
            "openFileInMode": "default"
          }
        },
        {
          "name": "Timetracker: Start or stop the stopwatch",
          "type": "Obsidian",
          "id": "ceec2393-453c-480a-acb5-2c29715f55ee",
          "commandId": "timetracker:start-stop-stopwatch"
        }
      ],
      "runOnStartup": true
    }
  ],
  "inputPrompt": "single-line",
  "devMode": false,
  "templateFolderPath": "",
  "announceUpdates": true,
  "version": "1.11.0",
  "disableOnlineFeatures": true,
  "enableRibbonIcon": false,
  "ai": {
    "defaultModel": "Ask me",
    "defaultSystemPrompt": "As an AI assistant within Obsidian, your primary goal is to help users manage their ideas and knowledge more effectively. Format your responses using Markdown syntax. Please use the [[Obsidian]] link format. You can write aliases for the links by writing [[Obsidian|the alias after the pipe symbol]]. To use mathematical notation, use LaTeX syntax. LaTeX syntax for larger equations should be on separate lines, surrounded with double dollar signs ($$). You can also inline math expressions by wrapping it in $ symbols. For example, use $$w_{ij}^{\text{new}}:=w_{ij}^{\text{current}}+etacdotdelta_jcdot x_{ij}$$ on a separate line, but you can write \"($eta$ = learning rate, $delta_j$ = error term, $x_{ij}$ = input)\" inline.",
    "promptTemplatesFolderPath": "",
    "showAssistant": true,
    "providers": [
      {
        "name": "OpenAI",
        "endpoint": "https://api.openai.com/v1",
        "apiKey": "",
        "models": [
          {
            "name": "text-davinci-003",
            "maxTokens": 4096
          },
          {
            "name": "gpt-3.5-turbo",
            "maxTokens": 4096
          },
          {
            "name": "gpt-3.5-turbo-16k",
            "maxTokens": 16384
          },
          {
            "name": "gpt-3.5-turbo-1106",
            "maxTokens": 16385
          },
          {
            "name": "gpt-4",
            "maxTokens": 8192
          },
          {
            "name": "gpt-4-32k",
            "maxTokens": 32768
          },
          {
            "name": "gpt-4-1106-preview",
            "maxTokens": 128000
          },
          {
            "name": "gpt-4-turbo",
            "maxTokens": 128000
          },
          {
            "name": "gpt-4o",
            "maxTokens": 128000
          },
          {
            "name": "gpt-4o-mini",
            "maxTokens": 128000
          }
        ]
      }
    ]
  },
  "migrations": {
    "migrateToMacroIDFromEmbeddedMacro": true,
    "useQuickAddTemplateFolder": true,
    "incrementFileNameSettingMoveToDefaultBehavior": true,
    "mutualExclusionInsertAfterAndWriteToBottomOfFile": true,
    "setVersionAfterUpdateModalRelease": true,
    "addDefaultAIProviders": true
  }
}